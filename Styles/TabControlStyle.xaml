<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:Crystal_Editor.Properties">






    <Style TargetType="{x:Type TabControl}" >
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Style.Triggers>
            <!-- Light Mode -->
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorTheme}" Value="Light">
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="TabPanel.Background" Value="Black"/>                
                <Setter Property="TabItem.Background" Value="LightGray"/>
                <Setter Property="TabItem.Foreground" Value="Black"/>
            </DataTrigger>
            <!-- Dark Mode -->
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorTheme}" Value="Dark">
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="TabPanel.Background" Value="White"/>
                <Setter Property="TabItem.Background" Value="Black"/>
                <Setter Property="TabItem.Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>        
    </Style>


    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Padding" Value="5,2,5,2"/>
        <Setter Property="Foreground" Value="Purple"/>
        <Setter Property="Background" Value="Teal"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentSite"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  ContentSource="Header"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Light Mode!-->
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorTheme}" Value="Light">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                    <Condition Binding="{Binding Path=ColorTheme, Source={x:Static properties:Settings.Default}}" Value="Light"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource Light_Background_MouseOver}"/>                    
                    <Setter Property="Foreground" Value="{StaticResource Light_Foreground_MouseOver}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>


            <!--Dark Mode!-->
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorTheme}" Value="Dark">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="{StaticResource DarkMode_TabItemBackground}"/> 
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                    <Condition Binding="{Binding Path=ColorTheme, Source={x:Static properties:Settings.Default}}" Value="Dark"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource DarkMode_TabItemMouseoverBackground}"/>
                    <Setter Property="Foreground" Value="{StaticResource DarkMode_TabItemMouseoverForeground}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                    <Condition Binding="{Binding Path=ColorTheme, Source={x:Static properties:Settings.Default}}" Value="Dark"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource DarkMode_TabItemSelected}"/>
                    <Setter Property="Foreground" Value="{StaticResource White}"/>                    
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            
            
            
            
            
        </Style.Triggers>
    </Style>


    <!--<MultiTrigger>
        <MultiTrigger.Conditions>
            <Condition Property="IsMouseOver" Value="True"/>
            <Condition Property="IsSelected" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter Property="Foreground" Value="Yellow"/>
        <Setter Property="Background" Value="Purple"/>
    </MultiTrigger>-->

    <!--<Style TargetType="{x:Type TabItem}">
        <Setter Property="Padding" Value="5,2,5,2"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentSite"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      ContentSource="Header"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorTheme}" Value="Light">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorTheme}" Value="Dark">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Gray"/>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Blue"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Yellow"/>
            </MultiTrigger>
        </Style.Triggers>        
    </Style>-->



</ResourceDictionary>